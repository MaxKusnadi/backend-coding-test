swagger: "2.0"
info:
  description: "This is the developer documentation for Rides Data Service. This service enables the storing and viewing of rides data"
  version: "1.0.0"
  title: "Rides Data Service"
host: "localhost:8010"
tags:
- name: "rides"
  description: "Storing and Retrieving of rides data"
- name: "health"
  description: "Check the availability of Rides Data Service"
schemes:
- "http"
paths:
  /health:
    get:
      tags:
      - "health"
      summary: "Simple call to check the availability of Rides Data Service"
      responses:
        200:
          description: "Successful call"
  /rides:
    get:
      tags:
        - "rides"
      summary: "Find all rides in the database"
      operationId: "getAllRides"
      produces:
        - "application/json"
      parameter:
        - name: "page"
          in: "path"
          description: "The input page of the rides data. It must be > 0. This will default to 1 if not given"
          required: false
          type: "integer"
          format: "int64"

        - name: "size"
          in: "path"
          description: "Number of rides data per page of the rides data. It must be > 0. This will default to 10 if not given"
          required: false
          type: "integer"
          format: "int64"

      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/GetRidesResponse"
        404:
          description: "Rides not found"
        500:
          description: "Server error"
    post:
      tags:
        - "rides"
      summary: "Create a new ride data in the database"
      description: ""
      operationId: "createNewRide"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "start_long"
          in: "body"
          description: "The longitude of the initial location of the ride. The value must be in between -180 and 180 exclusive"
          required: true
          type: "integer"
          format: "int64"

        - name: "start_lat"
          in: "body"
          description: "The latitude of the initial location of the ride. The value must be in between -90 and 90 exclusive"
          required: true
          type: "integer"
          format: "int64"

        - name: "end_long"
          in: "body"
          description: "The longitude of the end location of the ride. The value must be in between -180 and 180 exclusive"
          required: true
          type: "integer"
          format: "int64"

        - name: "end_lat"
          in: "body"
          description: "The latitude of the end location of the ride. The value must be in between -90 and 90 exclusive"
          required: true
          type: "integer"
          format: "int64"

        - name: "rider_name"
          in: "body"
          description: "The name of the rider"
          required: true
          type: "string"

        - name: "driver_name"
          in: "body"
          description: "The name of the driver"
          required: true
          type: "string"

        - name: "driver_vehicle"
          in: "body"
          description: "The plate number of the driver"
          required: true
          type: "string"

      responses:
        201:
          description: "Rides creation is successful"
        200:
          description: "Rides is already created"
        400:
          description: "Bad request"
        500:
          description: "Server error"

  /rides/{rideId}:
    get:
      tags:
      - "rides"
      summary: "Find ride by ID"
      description: "Returns a single ride"
      operationId: "getRideById"
      produces:
      - "application/json"
      parameters:
      - name: "rideId"
        in: "path"
        description: "ID of ride to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Rides"
        404:
          description: "Rides not found"
        500:
          description: "Server error"

definitions:
  Rides:
    type: "object"
    properties:
      start_long:
        type: "integer"
        format: "int64"
        description: "The initial longitude of the ride"
      start_lat:
        type: "integer"
        format: "int64"
        description: "The initial latitude of the ride"
      end_long:
        type: "integer"
        format: "int64"
        description: "The final longitude of the ride"
      end_lat:
        type: "integer"
        format: "int64"
        description: "The final latitude of the ride"
      rider_name:
        type: "string"
        description: "The name of the rider"
      driver_name:
        type: "string"
        description: "The name of the rider"
      driver_vehicle:
        type: "string"
        description: "The name of the rider"
  GetRidesResponse:
    type: "object"
      data: data.slice(startIndex, endIndex),
    properties:
      totalItems:
        type: "integer"
        format: "int64"
        description: "Total number of rides in the database"
      totalPages:
        type: "integer"
        format: "int64"
        description: "Total number of pages with the given query"
      page:
        type: "integer"
        format: "int64"
        description: "Total current page of the data"
      size:
        type: "integer"
        format: "int64"
        description: "Maximum number of rides per page"
      data:
        schema:
          $ref: "#/definitions/Rides"
        description: "Array of rides data"
